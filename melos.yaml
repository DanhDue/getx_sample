name: getx_sample

packages:
  - lib/utils/annotations/**
  - lib/utils/generators/**

command:
  bootstrap:
    # NOTE: https://github.com/invertase/melos/issues/117#issuecomment-1125224468
    # A workaround is to run melos clean before melos publish,
    # which removes pubspec_overrides.yamls if they were generated by Melos.
    usePubspecOverrides: true

scripts:
  genAlls:
    run: bash ./scripts/generate_all.sh
    description: generate freezed models, images, colors, locales.

  genImages:
    run: bash ./scripts/fluttergen.sh
    description: use the flutter gen to generate assets(images, colors,...).

  genColors:
    run: bash ./scripts/gen_colors.sh
    description: use the flutter gen to generate assets(images, colors,...).

  genLocales:
    run: bash ./scripts/generate_locales.sh
    description: generate locales.

  build_runner:
    run: bash ./scripts/build_runner.sh
    description: build freezed models.

  fluttergen:
    run: bash ./scripts/fluttergen.sh
    description: generate assets(images, colors,...).

  clean:
    run: bash ./scripts/clean.sh
    description: flutter clean for main project.

  pubGet:
    run: bash ./scripts/pub_get.sh
    description: pub get for main project.

  cleanPackage:
    run: |
      melos exec -- fvm flutter clean
    select-package:
      dir-exists: lib
    description: flutter clean for each package.

  pubGetPackage:
    run: |
      melos exec -- fvm flutter pub get
    select-package:
      dir-exists: lib
    description: pub get for each package.

  analyze: dart analyze

  format: bash ./scripts/dartfmt.sh

  unit:test:
    run: melos exec -- dart test
    select-package:
      dir-exists: test

  unchangeGitModules: bash ./scripts/git/unchangeGitModules.sh

  fvmUse:
    run: |
      melos exec \
      -- fvm use 3.3.3
    description: sync the Flutter SDK version for all modules.

  gitInitModularRemotes:
    run: |
      melos exec \
      -- git remote-init
    description: add the modular remote to each module.

  gitStatus:
    run: |
      melos exec \
      -- git status
    description: check the project status for each module.

  addSSHKey: bash ./scripts/add_ssh_key_to_keychain.sh

  genTestCoverage: bash ./scripts/combine_coverage.sh

  createNativeSplash:
    run: bash ./scripts/create_native_splash.sh
    description: create native splash screen with configuration from the flutter_native_splash.yaml file.

  installTools:
    run: bash ./scripts/install_tools.sh
    description: install some necessary tools such as fvm, flutter_gen, get_cli.
