// Mocks generated by Mockito 5.3.2 from annotations
// in getx_sample/test/mocks/repositories.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:getx_sample/data/bean/app_configurations.dart' as _i4;
import 'package:getx_sample/data/bean/user_object/user_object.dart' as _i7;
import 'package:getx_sample/data/remote/interfaces/base_response_object.dart' as _i8;
import 'package:getx_sample/data/remote/wrappers/network_error.dart' as _i9;
import 'package:getx_sample/data/remote/wrappers/result.dart' as _i2;
import 'package:getx_sample/data/repositories/user_repository.dart' as _i6;
import 'package:getx_sample/utils/biometric_auth/biometric_authenticator.dart' as _i10;
import 'package:hive/hive.dart' as _i3;
import 'package:local_auth/local_auth.dart' as _i11;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T, E extends Exception> extends _i1.SmartFake implements _i2.Result<T, E> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Box].
///
/// See the documentation for Mockito's code generation for more information.
class MockBox extends _i1.Mock implements _i3.Box<_i4.AppConfigurations> {
  @override
  Iterable<_i4.AppConfigurations> get values => (super.noSuchMethod(
        Invocation.getter(#values),
        returnValue: <_i4.AppConfigurations>[],
        returnValueForMissingStub: <_i4.AppConfigurations>[],
      ) as Iterable<_i4.AppConfigurations>);
  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  bool get isOpen => (super.noSuchMethod(
        Invocation.getter(#isOpen),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get lazy => (super.noSuchMethod(
        Invocation.getter(#lazy),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  Iterable<dynamic> get keys => (super.noSuchMethod(
        Invocation.getter(#keys),
        returnValue: <dynamic>[],
        returnValueForMissingStub: <dynamic>[],
      ) as Iterable<dynamic>);
  @override
  int get length => (super.noSuchMethod(
        Invocation.getter(#length),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  bool get isEmpty => (super.noSuchMethod(
        Invocation.getter(#isEmpty),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get isNotEmpty => (super.noSuchMethod(
        Invocation.getter(#isNotEmpty),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  Iterable<_i4.AppConfigurations> valuesBetween({
    dynamic startKey,
    dynamic endKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #valuesBetween,
          [],
          {
            #startKey: startKey,
            #endKey: endKey,
          },
        ),
        returnValue: <_i4.AppConfigurations>[],
        returnValueForMissingStub: <_i4.AppConfigurations>[],
      ) as Iterable<_i4.AppConfigurations>);
  @override
  _i4.AppConfigurations? getAt(int? index) => (super.noSuchMethod(
        Invocation.method(
          #getAt,
          [index],
        ),
        returnValueForMissingStub: null,
      ) as _i4.AppConfigurations?);
  @override
  Map<dynamic, _i4.AppConfigurations> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <dynamic, _i4.AppConfigurations>{},
        returnValueForMissingStub: <dynamic, _i4.AppConfigurations>{},
      ) as Map<dynamic, _i4.AppConfigurations>);
  @override
  dynamic keyAt(int? index) => super.noSuchMethod(
        Invocation.method(
          #keyAt,
          [index],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Stream<_i3.BoxEvent> watch({dynamic key}) => (super.noSuchMethod(
        Invocation.method(
          #watch,
          [],
          {#key: key},
        ),
        returnValue: _i5.Stream<_i3.BoxEvent>.empty(),
        returnValueForMissingStub: _i5.Stream<_i3.BoxEvent>.empty(),
      ) as _i5.Stream<_i3.BoxEvent>);
  @override
  bool containsKey(dynamic key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i5.Future<void> put(
    dynamic key,
    _i4.AppConfigurations? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> putAt(
    int? index,
    _i4.AppConfigurations? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #putAt,
          [
            index,
            value,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> putAll(Map<dynamic, _i4.AppConfigurations>? entries) => (super.noSuchMethod(
        Invocation.method(
          #putAll,
          [entries],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<int> add(_i4.AppConfigurations? value) => (super.noSuchMethod(
        Invocation.method(
          #add,
          [value],
        ),
        returnValue: _i5.Future<int>.value(0),
        returnValueForMissingStub: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Future<Iterable<int>> addAll(Iterable<_i4.AppConfigurations>? values) => (super.noSuchMethod(
        Invocation.method(
          #addAll,
          [values],
        ),
        returnValue: _i5.Future<Iterable<int>>.value(<int>[]),
        returnValueForMissingStub: _i5.Future<Iterable<int>>.value(<int>[]),
      ) as _i5.Future<Iterable<int>>);
  @override
  _i5.Future<void> delete(dynamic key) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [key],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> deleteAt(int? index) => (super.noSuchMethod(
        Invocation.method(
          #deleteAt,
          [index],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> deleteAll(Iterable<dynamic>? keys) => (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [keys],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> compact() => (super.noSuchMethod(
        Invocation.method(
          #compact,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<int> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i5.Future<int>.value(0),
        returnValueForMissingStub: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> deleteFromDisk() => (super.noSuchMethod(
        Invocation.method(
          #deleteFromDisk,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> flush() => (super.noSuchMethod(
        Invocation.method(
          #flush,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i6.UserRepository {
  @override
  _i5.Future<void> saveUserInfo(_i7.UserObject? userObject) => (super.noSuchMethod(
        Invocation.method(
          #saveUserInfo,
          [userObject],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<_i7.UserObject?> retrieveUserInfo() => (super.noSuchMethod(
        Invocation.method(
          #retrieveUserInfo,
          [],
        ),
        returnValue: _i5.Future<_i7.UserObject?>.value(),
        returnValueForMissingStub: _i5.Future<_i7.UserObject?>.value(),
      ) as _i5.Future<_i7.UserObject?>);
  @override
  _i5.Future<_i7.UserPermission?> retrieveUserPermission() => (super.noSuchMethod(
        Invocation.method(
          #retrieveUserPermission,
          [],
        ),
        returnValue: _i5.Future<_i7.UserPermission?>.value(),
        returnValueForMissingStub: _i5.Future<_i7.UserPermission?>.value(),
      ) as _i5.Future<_i7.UserPermission?>);
  @override
  _i5.Future<void> toggleBiometricLogin(bool? enable) => (super.noSuchMethod(
        Invocation.method(
          #toggleBiometricLogin,
          [enable],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<_i2.Result<_i8.BaseResponseObject<_i7.UserObject?>, _i9.NetworkError>> login(
    String? userName,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            userName,
            password,
          ],
        ),
        returnValue: _i5.Future<
                _i2.Result<_i8.BaseResponseObject<_i7.UserObject?>, _i9.NetworkError>>.value(
            _FakeResult_0<_i8.BaseResponseObject<_i7.UserObject?>, _i9.NetworkError>(
          this,
          Invocation.method(
            #login,
            [
              userName,
              password,
            ],
          ),
        )),
        returnValueForMissingStub: _i5.Future<
                _i2.Result<_i8.BaseResponseObject<_i7.UserObject?>, _i9.NetworkError>>.value(
            _FakeResult_0<_i8.BaseResponseObject<_i7.UserObject?>, _i9.NetworkError>(
          this,
          Invocation.method(
            #login,
            [
              userName,
              password,
            ],
          ),
        )),
      ) as _i5.Future<_i2.Result<_i8.BaseResponseObject<_i7.UserObject?>, _i9.NetworkError>>);
}

/// A class which mocks [BiometricAuthenticator].
///
/// See the documentation for Mockito's code generation for more information.
class MockBiometricAuthenticator extends _i1.Mock implements _i10.BiometricAuthenticator {
  @override
  _i5.Future<bool> deviceIsSupported() => (super.noSuchMethod(
        Invocation.method(
          #deviceIsSupported,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<bool> checkBiometrics() => (super.noSuchMethod(
        Invocation.method(
          #checkBiometrics,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<List<_i11.BiometricType>?> getAvailableBiometrics() => (super.noSuchMethod(
        Invocation.method(
          #getAvailableBiometrics,
          [],
        ),
        returnValue: _i5.Future<List<_i11.BiometricType>?>.value(),
        returnValueForMissingStub: _i5.Future<List<_i11.BiometricType>?>.value(),
      ) as _i5.Future<List<_i11.BiometricType>?>);
  @override
  _i5.Future<bool> authenticate(String? localizedReason) => (super.noSuchMethod(
        Invocation.method(
          #authenticate,
          [localizedReason],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<bool> authenticateWithBiometrics(String? localizedReason) => (super.noSuchMethod(
        Invocation.method(
          #authenticateWithBiometrics,
          [localizedReason],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<void> cancelAuthentication() => (super.noSuchMethod(
        Invocation.method(
          #cancelAuthentication,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
